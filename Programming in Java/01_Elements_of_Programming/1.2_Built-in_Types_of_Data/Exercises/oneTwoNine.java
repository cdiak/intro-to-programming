// Program I wrote to evaluate the conditions

public class oneTwoNine {
    public static void main(String[] args) {
        System.out.println('b');
        System.out.println('b' + 'c');
        System.out.println((char) ('a'+ 4));
    }
}

/*
 *  System.out.println('b');             ==>    b
    Explanation: 'b' is a char literal that is being printed
    to the console.

    System.out.println('b' + 'c');       ==>    197
    Explanation: There is implicit conversion happening here
    from char to int because + is NOT concatenation because
    'b' and 'c' are char literals, NOT string literals.
    Instead, Java is converting 'b' and 'c' to their unicode
    values of 98 and 99, respectively, and adding them.

    System.out.println((char) ('a'+4)); ==>   e
    Explanation: This is an int to char explicit cast,
    taking the int value generated by the unicode values
    of 'a' (97) and the integer literal 4 (101) and casting 
    it into a char, which is e. This makes sense because
    e is 4 characters above a.
 */